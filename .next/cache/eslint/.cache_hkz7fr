[{"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\api\\auth\\[...nextauth].js":"1","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\api\\hello.js":"2","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\index.js":"3","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\[id].js":"4","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\_app.js":"5","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Comment.js":"6","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Feed.js":"7","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Input.js":"8","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Login.js":"9","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Modal.js":"10","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Post.js":"11","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Sidebar.js":"12","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\SidebarLink.js":"13","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Trending.js":"14","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Widgets.js":"15"},{"size":618,"mtime":1655897343276,"results":"16","hashOfConfig":"17"},{"size":172,"mtime":1655953136092,"results":"18","hashOfConfig":"17"},{"size":1540,"mtime":1655955636069,"results":"19","hashOfConfig":"17"},{"size":3452,"mtime":1656237546482,"results":"20","hashOfConfig":"17"},{"size":493,"mtime":1655953726782,"results":"21","hashOfConfig":"17"},{"size":2310,"mtime":1655965510403,"results":"22","hashOfConfig":"17"},{"size":1370,"mtime":1655955671061,"results":"23","hashOfConfig":"17"},{"size":5697,"mtime":1655970333184,"results":"24","hashOfConfig":"17"},{"size":1343,"mtime":1655953705465,"results":"25","hashOfConfig":"17"},{"size":6813,"mtime":1655949362520,"results":"26","hashOfConfig":"17"},{"size":6551,"mtime":1655955071704,"results":"27","hashOfConfig":"17"},{"size":2146,"mtime":1655950269721,"results":"28","hashOfConfig":"17"},{"size":504,"mtime":1655950347784,"results":"29","hashOfConfig":"17"},{"size":1211,"mtime":1655949368348,"results":"30","hashOfConfig":"17"},{"size":2717,"mtime":1656237858368,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17prk1b",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\api\\auth\\[...nextauth].js",[],[],"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\api\\hello.js",[],[],"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\index.js",[],[],"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\[id].js",["87","88"],[],"import {\r\n  collection,\r\n  doc,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from \"@firebase/firestore\";\r\nimport { getProviders, getSession, useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { modalState } from \"../atoms/modalAtom\";\r\nimport Modal from \"../components/Modal\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Widgets from \"../components/Widgets\";\r\nimport Post from \"../components/Post\";\r\nimport { db } from \"../firebase\";\r\nimport { ArrowLeftIcon } from \"@heroicons/react/solid\";\r\nimport Comment from \"../components/Comment\";\r\nimport Head from \"next/head\";\r\nimport Login from \"../components/Login\";\r\n\r\nfunction PostPage({ trendingResults, followResults, providers }) {\r\n  const { data: session } = useSession();\r\n  const [isOpen, setIsOpen] = useRecoilState(modalState);\r\n  const [post, setPost] = useState();\r\n  const [comments, setComments] = useState([]);\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(doc(db, \"posts\", id), (snapshot) => {\r\n        setPost(snapshot.data());\r\n      }),\r\n    [db]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(\r\n          collection(db, \"posts\", id, \"comments\"),\r\n          orderBy(\"timestamp\", \"desc\")\r\n        ),\r\n        (snapshot) => setComments(snapshot.docs)\r\n      ),\r\n    [db, id]\r\n  );\r\n\r\n  if (!session) return <Login providers={providers} />;\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>\r\n          {post?.username} on Twitter: \"{post?.text}\"\r\n        </title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n      <main className=\"bg-black min-h-screen flex max-w-[1500px] mx-auto\">\r\n        <Sidebar />\r\n        <div className=\"flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]\">\r\n          <div className=\"flex items-center px-1.5 py-2 border-b border-gray-700 text-[#d9d9d9] font-semibold text-xl gap-x-4 sticky top-0 z-50 bg-black\">\r\n            <div\r\n              className=\"hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0\"\r\n              onClick={() => router.push(\"/\")}\r\n            >\r\n              <ArrowLeftIcon className=\"h-5 text-white\" />\r\n            </div>\r\n            Tweet\r\n          </div>\r\n\r\n          <Post id={id} post={post} postPage />\r\n          {comments.length > 0 && (\r\n            <div className=\"pb-72\">\r\n              {comments.map((comment) => (\r\n                <Comment\r\n                  key={comment.id}\r\n                  id={comment.id}\r\n                  comment={comment.data()}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Widgets\r\n          trendingResults={trendingResults}\r\n          followResults={followResults}\r\n        />\r\n\r\n        {isOpen && <Modal />}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostPage;\r\n\r\nexport async function getServerSideProps(context) {\r\n  const trendingResults = await fetch(\"https://jsonkeeper.com/b/NKEV\").then(\r\n    (res) => res.json()\r\n  );\r\n  const followResults = await fetch(\"https://jsonkeeper.com/b/WWMJ\").then(\r\n    (res) => res.json()\r\n  );\r\n  const providers = await getProviders();\r\n  const session = await getSession(context);\r\n\r\n  return {\r\n    props: {\r\n      trendingResults,\r\n      followResults,\r\n      providers,\r\n      session,\r\n    },\r\n  };\r\n}\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\pages\\_app.js",[],[],"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Comment.js",["89"],[],"import {\r\n  ChartBarIcon,\r\n  ChatIcon,\r\n  DotsHorizontalIcon,\r\n  HeartIcon,\r\n  ShareIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport Moment from \"react-moment\";\r\n\r\nfunction Comment({ comment }) {\r\n  return (\r\n    <div className=\"p-3 flex cursor-pointer border-b border-gray-700\">\r\n      <img\r\n        src={comment?.userImg}\r\n        alt=\"\"\r\n        className=\"h-11 w-11 rounded-full mr-4\"\r\n      />\r\n      <div className=\"flex flex-col space-y-2 w-full\">\r\n        <div className=\"flex justify-between\">\r\n          <div className=\"text-[#6e767d]\">\r\n            <div className=\"inline-block group\">\r\n              <h4 className=\"font-bold text-[#d9d9d9] text-[15px] sm:text-base inline-block group-hover:underline\">\r\n                {comment?.username}\r\n              </h4>\r\n              <span className=\"ml-1.5 text-sm sm:text-[15px]\">\r\n                @{comment?.tag}{\" \"}\r\n              </span>\r\n            </div>{\" \"}\r\n            Â·{\" \"}\r\n            <span className=\"hover:underline text-sm sm:text-[15px]\">\r\n              <Moment fromNow>{comment?.timestamp?.toDate()}</Moment>\r\n            </span>\r\n            <p className=\"text-[#d9d9d9] mt-0.5 max-w-lg overflow-scroll text-[15px] sm:text-base\">\r\n              {comment?.comment}\r\n            </p>\r\n          </div>\r\n          <div className=\"icon group flex-shrink-0\">\r\n            <DotsHorizontalIcon className=\"h-5 text-[#6e767d] group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-[#6e767d] flex justify-between w-10/12\">\r\n          <div className=\"icon group\">\r\n            <ChatIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-1 group\">\r\n            <div className=\"icon group-hover:bg-pink-600/10\">\r\n              <HeartIcon className=\"h-5 group-hover:text-pink-600\" />\r\n            </div>\r\n            <span className=\"group-hover:text-pink-600 text-sm\"></span>\r\n          </div>\r\n\r\n          <div className=\"icon group\">\r\n            <ShareIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n          <div className=\"icon group\">\r\n            <ChartBarIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Feed.js",["90"],[],"import { SparklesIcon } from \"@heroicons/react/outline\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport { onSnapshot, collection, query, orderBy } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport Post from \"./Post\";\r\nimport { useSession } from \"next-auth/react\";\r\n\r\nfunction Feed() {\r\n  const { data: session } = useSession();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(collection(db, \"posts\"), orderBy(\"timestamp\", \"desc\")),\r\n        (snapshot) => {\r\n          setPosts(snapshot.docs);\r\n        }\r\n      ),\r\n    [db]\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]\">\r\n      <div className=\"text-[#d9d9d9] flex items-center sm:justify-between py-2 px-3 sticky top-0 z-50 bg-black border-b border-gray-700\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold\">Home</h2>\r\n        <div className=\"hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0 ml-auto\">\r\n          <SparklesIcon className=\"h-5 text-white\" />\r\n        </div>\r\n      </div>\r\n\r\n      <Input />\r\n      <div className=\"pb-72\">\r\n        {posts.map((post) => (\r\n          <Post key={post.id} id={post.id} post={post.data()} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Input.js",["91","92","93"],[],"import {\r\n  CalendarIcon,\r\n  ChartBarIcon,\r\n  EmojiHappyIcon,\r\n  PhotographIcon,\r\n  XIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { db, storage } from \"../firebase\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { signOut, useSession } from \"next-auth/react\";\r\nimport dynamic from \"next/dynamic\";\r\n\r\nimport data from \"@emoji-mart/data\";\r\n\r\nfunction Picker(props = {}) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    import(\"emoji-mart\").then((EmojiMart) => {\r\n      new EmojiMart.Picker({ ...props, data, ref });\r\n    });\r\n  }, []);\r\n\r\n  return <div ref={ref}></div>;\r\n}\r\n\r\nfunction Input() {\r\n  const { data: session } = useSession();\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const filePickerRef = useRef(null);\r\n  const [showEmojis, setShowEmojis] = useState(false);\r\n\r\n  const sendPost = async () => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n\r\n    const docRef = await addDoc(collection(db, \"posts\"), {\r\n      id: session.user.uid,\r\n      username: session.user.name,\r\n      userImg: session.user.image,\r\n      tag: session.user.tag,\r\n      text: input,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n\r\n    const imageRef = ref(storage, `posts/${docRef.id}/image`);\r\n\r\n    if (selectedFile) {\r\n      await uploadString(imageRef, selectedFile, \"data_url\").then(async () => {\r\n        const downloadURL = await getDownloadURL(imageRef);\r\n        await updateDoc(doc(db, \"posts\", docRef.id), {\r\n          image: downloadURL,\r\n        });\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n    setInput(\"\");\r\n    setSelectedFile(null);\r\n    setShowEmojis(false);\r\n  };\r\n\r\n  const addImageToPost = (e) => {\r\n    const reader = new FileReader();\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    reader.onload = (readerEvent) => {\r\n      setSelectedFile(readerEvent.target.result);\r\n    };\r\n  };\r\n\r\n  const addEmoji = (e) => {\r\n    let sym = e.unified.split(\"-\");\r\n    let codesArray = [];\r\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\r\n    let emoji = String.fromCodePoint(...codesArray);\r\n    setInput(input + emoji);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`border-b border-gray-700 p-3 flex space-x-3 overflow-y-scroll scrollbar-hide ${\r\n        loading && \"opacity-60\"\r\n      }`}\r\n    >\r\n      <img\r\n        src={session.user.image}\r\n        alt=\"\"\r\n        className=\"h-11 w-11 rounded-full cursor-pointer\"\r\n        onClick={signOut}\r\n      />\r\n      <div className=\"divide-y divide-gray-700 w-full\">\r\n        <div className={`${selectedFile && \"pb-7\"} ${input && \"space-y-2.5\"}`}>\r\n          <textarea\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"What's happening?\"\r\n            rows=\"2\"\r\n            className=\"bg-transparent outline-none text-[#d9d9d9] text-lg placeholder-gray-500 tracking-wide w-full min-h-[50px]\"\r\n          />\r\n\r\n          {selectedFile && (\r\n            <div className=\"relative\">\r\n              <div\r\n                className=\"absolute w-8 h-8 bg-[#15181c] hover:bg-[#272c26] bg-opacity-75 rounded-full flex items-center justify-center top-1 left-1 cursor-pointer\"\r\n                onClick={() => setSelectedFile(null)}\r\n              >\r\n                <XIcon className=\"text-white h-5\" />\r\n              </div>\r\n              <img\r\n                src={selectedFile}\r\n                alt=\"\"\r\n                className=\"rounded-2xl max-h-80 object-contain\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {!loading && (\r\n          <div className=\"flex items-center justify-between pt-2.5\">\r\n            <div className=\"flex items-center\">\r\n              <div\r\n                className=\"icon\"\r\n                onClick={() => filePickerRef.current.click()}\r\n              >\r\n                <PhotographIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n                <input\r\n                  type=\"file\"\r\n                  ref={filePickerRef}\r\n                  hidden\r\n                  onChange={addImageToPost}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"icon rotate-90\">\r\n                <ChartBarIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n              </div>\r\n\r\n              <div className=\"icon\" onClick={() => setShowEmojis(!showEmojis)}>\r\n                <EmojiHappyIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n              </div>\r\n\r\n              <div className=\"icon\">\r\n                <CalendarIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n              </div>\r\n\r\n              {showEmojis && (\r\n                <Picker\r\n                  onSelect={addEmoji}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    marginTop: \"465px\",\r\n                    marginLeft: -40,\r\n                    maxWidth: \"320px\",\r\n                    borderRadius: \"20px\",\r\n                  }}\r\n                  theme=\"dark\"\r\n                />\r\n              )}\r\n            </div>\r\n            <button\r\n              className=\"bg-[#1d9bf0] text-white rounded-full px-4 py-1.5 font-bold shadow-md hover:bg-[#1a8cd8] disabled:hover:bg-[#1d9bf0] disabled:opacity-50 disabled:cursor-default\"\r\n              disabled={!input && !selectedFile}\r\n              onClick={sendPost}\r\n            >\r\n              Tweet\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Login.js",["94"],[],"import { signIn } from \"next-auth/react\";\r\nimport Image from \"next/image\";\r\n\r\nfunction Login({ providers }) {\r\n  return (\r\n    <div className=\"flex flex-col items-center space-y-20 pt-48\">\r\n      <Image\r\n        src=\"https://rb.gy/ogau5a\"\r\n        width={150}\r\n        height={150}\r\n        objectFit=\"contain\"\r\n      />\r\n\r\n      <div>\r\n        {Object.values(providers).map((provider) => (\r\n          <div key={provider.name}>\r\n            {/* https://devdojo.com/tailwindcss/buttons#_ */}\r\n            <button\r\n              className=\"relative inline-flex items-center justify-start px-6 py-3 overflow-hidden font-medium transition-all bg-white rounded hover:bg-white group\"\r\n              onClick={() => signIn(provider.id, { callbackUrl: \"/\" })}\r\n            >\r\n              <span className=\"w-48 h-48 rounded rotate-[-40deg] bg-[#1d9bf0] absolute bottom-0 left-0 -translate-x-full ease-out duration-500 transition-all translate-y-full mb-9 ml-9 group-hover:ml-0 group-hover:mb-32 group-hover:translate-x-0\"></span>\r\n              <span className=\"relative w-full text-left text-black transition-colors duration-300 ease-in-out group-hover:text-white\">\r\n                Sign in with {provider.name}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Modal.js",["95","96","97"],[],"import { useRecoilState } from \"recoil\";\r\nimport { modalState, postIdState } from \"../atoms/modalAtom\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  onSnapshot,\r\n  doc,\r\n  addDoc,\r\n  collection,\r\n  serverTimestamp,\r\n} from \"@firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport {\r\n  CalendarIcon,\r\n  ChartBarIcon,\r\n  EmojiHappyIcon,\r\n  PhotographIcon,\r\n  XIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { useRouter } from \"next/router\";\r\nimport Moment from \"react-moment\";\r\n\r\nfunction Modal() {\r\n  const { data: session } = useSession();\r\n  const [isOpen, setIsOpen] = useRecoilState(modalState);\r\n  const [postId, setPostId] = useRecoilState(postIdState);\r\n  const [post, setPost] = useState();\r\n  const [comment, setComment] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(doc(db, \"posts\", postId), (snapshot) => {\r\n        setPost(snapshot.data());\r\n      }),\r\n    [db]\r\n  );\r\n\r\n  const sendComment = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await addDoc(collection(db, \"posts\", postId, \"comments\"), {\r\n      comment: comment,\r\n      username: session.user.name,\r\n      tag: session.user.tag,\r\n      userImg: session.user.image,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n\r\n    setIsOpen(false);\r\n    setComment(\"\");\r\n\r\n    router.push(`/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <Transition.Root show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"fixed z-50 inset-0 pt-8\" onClose={setIsOpen}>\r\n        <div className=\"flex items-start justify-center min-h-[800px] sm:min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-[#5b7083] bg-opacity-40 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-black rounded-2xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-xl sm:w-full\">\r\n              <div className=\"flex items-center px-1.5 py-2 border-b border-gray-700\">\r\n                <div\r\n                  className=\"hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <XIcon className=\"h-[22px] text-white\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex px-4 pt-5 pb-2.5 sm:px-6\">\r\n                <div className=\"w-full\">\r\n                  <div className=\"text-[#6e767d] flex gap-x-3 relative\">\r\n                    <span className=\"w-0.5 h-full z-[-1] absolute left-5 top-11 bg-gray-600\" />\r\n                    <img\r\n                      src={post?.userImg}\r\n                      alt=\"\"\r\n                      className=\"h-11 w-11 rounded-full\"\r\n                    />\r\n                    <div>\r\n                      <div className=\"inline-block group\">\r\n                        <h4 className=\"font-bold text-[#d9d9d9] inline-block text-[15px] sm:text-base\">\r\n                          {post?.username}\r\n                        </h4>\r\n                        <span className=\"ml-1.5 text-sm sm:text-[15px]\">\r\n                          @{post?.tag}{\" \"}\r\n                        </span>\r\n                      </div>{\" \"}\r\n                      Â·{\" \"}\r\n                      <span className=\"hover:underline text-sm sm:text-[15px]\">\r\n                        <Moment fromNow>{post?.timestamp?.toDate()}</Moment>\r\n                      </span>\r\n                      <p className=\"text-[#d9d9d9] text-[15px] sm:text-base\">\r\n                        {post?.text}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-7 flex space-x-3 w-full\">\r\n                    <img\r\n                      src={session.user.image}\r\n                      alt=\"\"\r\n                      className=\"h-11 w-11 rounded-full\"\r\n                    />\r\n                    <div className=\"flex-grow mt-2\">\r\n                      <textarea\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                        placeholder=\"Tweet your reply\"\r\n                        rows=\"2\"\r\n                        className=\"bg-transparent outline-none text-[#d9d9d9] text-lg placeholder-gray-500 tracking-wide w-full min-h-[80px]\"\r\n                      />\r\n\r\n                      <div className=\"flex items-center justify-between pt-2.5\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"icon\">\r\n                            <PhotographIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n                          </div>\r\n\r\n                          <div className=\"icon rotate-90\">\r\n                            <ChartBarIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n                          </div>\r\n\r\n                          <div className=\"icon\">\r\n                            <EmojiHappyIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n                          </div>\r\n\r\n                          <div className=\"icon\">\r\n                            <CalendarIcon className=\"text-[#1d9bf0] h-[22px]\" />\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          className=\"bg-[#1d9bf0] text-white rounded-full px-4 py-1.5 font-bold shadow-md hover:bg-[#1a8cd8] disabled:hover:bg-[#1d9bf0] disabled:opacity-50 disabled:cursor-default\"\r\n                          type=\"submit\"\r\n                          onClick={sendComment}\r\n                          disabled={!comment.trim()}\r\n                        >\r\n                          Reply\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Post.js",["98","99","100","101","102","103"],[],"import {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  setDoc,\r\n} from \"@firebase/firestore\";\r\nimport {\r\n  ChartBarIcon,\r\n  ChatIcon,\r\n  DotsHorizontalIcon,\r\n  HeartIcon,\r\n  ShareIcon,\r\n  SwitchHorizontalIcon,\r\n  TrashIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport {\r\n  HeartIcon as HeartIconFilled,\r\n  ChatIcon as ChatIconFilled,\r\n} from \"@heroicons/react/solid\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { modalState, postIdState } from \"../atoms/modalAtom\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction Post({ id, post, postPage }) {\r\n  const { data: session } = useSession();\r\n  const [isOpen, setIsOpen] = useRecoilState(modalState);\r\n  const [postId, setPostId] = useRecoilState(postIdState);\r\n  const [comments, setComments] = useState([]);\r\n  const [likes, setLikes] = useState([]);\r\n  const [liked, setLiked] = useState(false);\r\n  const router = useRouter();\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(\r\n          collection(db, \"posts\", id, \"comments\"),\r\n          orderBy(\"timestamp\", \"desc\")\r\n        ),\r\n        (snapshot) => setComments(snapshot.docs)\r\n      ),\r\n    [db, id]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(collection(db, \"posts\", id, \"likes\"), (snapshot) =>\r\n        setLikes(snapshot.docs)\r\n      ),\r\n    [db, id]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      setLiked(\r\n        likes.findIndex((like) => like.id === session?.user?.uid) !== -1\r\n      ),\r\n    [likes]\r\n  );\r\n\r\n  const likePost = async () => {\r\n    if (liked) {\r\n      await deleteDoc(doc(db, \"posts\", id, \"likes\", session.user.uid));\r\n    } else {\r\n      await setDoc(doc(db, \"posts\", id, \"likes\", session.user.uid), {\r\n        username: session.user.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"p-3 flex cursor-pointer border-b border-gray-700\"\r\n      onClick={() => router.push(`/${id}`)}\r\n    >\r\n      {!postPage && (\r\n        <img\r\n          src={post?.userImg}\r\n          alt=\"\"\r\n          className=\"h-11 w-11 rounded-full mr-4\"\r\n        />\r\n      )}\r\n      <div className=\"flex flex-col space-y-2 w-full\">\r\n        <div className={`flex ${!postPage && \"justify-between\"}`}>\r\n          {postPage && (\r\n            <img\r\n              src={post?.userImg}\r\n              alt=\"Profile Pic\"\r\n              className=\"h-11 w-11 rounded-full mr-4\"\r\n            />\r\n          )}\r\n          <div className=\"text-[#6e767d]\">\r\n            <div className=\"inline-block group\">\r\n              <h4\r\n                className={`font-bold text-[15px] sm:text-base text-[#d9d9d9] group-hover:underline ${\r\n                  !postPage && \"inline-block\"\r\n                }`}\r\n              >\r\n                {post?.username}\r\n              </h4>\r\n              <span\r\n                className={`text-sm sm:text-[15px] ${!postPage && \"ml-1.5\"}`}\r\n              >\r\n                @{post?.tag}\r\n              </span>\r\n            </div>\r\n            Â·{\" \"}\r\n            <span className=\"hover:underline text-sm sm:text-[15px]\">\r\n              <Moment fromNow>{post?.timestamp?.toDate()}</Moment>\r\n            </span>\r\n            {!postPage && (\r\n              <p className=\"text-[#d9d9d9] text-[15px] sm:text-base mt-0.5\">\r\n                {post?.text}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"icon group flex-shrink-0 ml-auto\">\r\n            <DotsHorizontalIcon className=\"h-5 text-[#6e767d] group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n        </div>\r\n        {postPage && (\r\n          <p className=\"text-[#d9d9d9] mt-0.5 text-xl\">{post?.text}</p>\r\n        )}\r\n        <img\r\n          src={post?.image}\r\n          alt=\"\"\r\n          className=\"rounded-2xl max-h-[700px] object-cover mr-2\"\r\n        />\r\n        <div\r\n          className={`text-[#6e767d] flex justify-between w-10/12 ${\r\n            postPage && \"mx-auto\"\r\n          }`}\r\n        >\r\n          <div\r\n            className=\"flex items-center space-x-1 group\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setPostId(id);\r\n              setIsOpen(true);\r\n            }}\r\n          >\r\n            <div className=\"icon group-hover:bg-[#1d9bf0] group-hover:bg-opacity-10\">\r\n              <ChatIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n            </div>\r\n            {comments.length > 0 && (\r\n              <span className=\"group-hover:text-[#1d9bf0] text-sm\">\r\n                {comments.length}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {session.user.uid === post?.id ? (\r\n            <div\r\n              className=\"flex items-center space-x-1 group\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                deleteDoc(doc(db, \"posts\", id));\r\n                router.push(\"/\");\r\n              }}\r\n            >\r\n              <div className=\"icon group-hover:bg-red-600/10\">\r\n                <TrashIcon className=\"h-5 group-hover:text-red-600\" />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex items-center space-x-1 group\">\r\n              <div className=\"icon group-hover:bg-green-500/10\">\r\n                <SwitchHorizontalIcon className=\"h-5 group-hover:text-green-500\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            className=\"flex items-center space-x-1 group\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              likePost();\r\n            }}\r\n          >\r\n            <div className=\"icon group-hover:bg-pink-600/10\">\r\n              {liked ? (\r\n                <HeartIconFilled className=\"h-5 text-pink-600\" />\r\n              ) : (\r\n                <HeartIcon className=\"h-5 group-hover:text-pink-600\" />\r\n              )}\r\n            </div>\r\n            {likes.length > 0 && (\r\n              <span\r\n                className={`group-hover:text-pink-600 text-sm ${\r\n                  liked && \"text-pink-600\"\r\n                }`}\r\n              >\r\n                {likes.length}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"icon group\">\r\n            <ShareIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n          <div className=\"icon group\">\r\n            <ChartBarIcon className=\"h-5 group-hover:text-[#1d9bf0]\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Sidebar.js",["104","105"],[],"import Image from \"next/image\";\r\nimport { HomeIcon } from \"@heroicons/react/solid\";\r\nimport {\r\n  HashtagIcon,\r\n  BellIcon,\r\n  InboxIcon,\r\n  BookmarkIcon,\r\n  ClipboardListIcon,\r\n  UserIcon,\r\n  DotsCircleHorizontalIcon,\r\n  DotsHorizontalIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport SidebarLink from \"./SidebarLink\";\r\nimport { signOut } from \"next-auth/react\";\r\nimport { useSession } from \"next-auth/react\";\r\n\r\nfunction Sidebar() {\r\n  const { data: session } = useSession();\r\n\r\n  return (\r\n    <div className=\"hidden sm:flex flex-col items-center xl:items-start xl:w-[340px] p-2 fixed h-full\">\r\n      <div className=\"flex items-center justify-center w-14 h-14 hoverAnimation p-0 xl:ml-24\">\r\n        <Image src=\"https://rb.gy/ogau5a\" width={30} height={30} />\r\n      </div>\r\n      <div className=\"space-y-2.5 mt-4 mb-2.5 xl:ml-24\">\r\n        <SidebarLink text=\"Home\" Icon={HomeIcon} active />\r\n        <SidebarLink text=\"Explore\" Icon={HashtagIcon} />\r\n        <SidebarLink text=\"Notifications\" Icon={BellIcon} />\r\n        <SidebarLink text=\"Messages\" Icon={InboxIcon} />\r\n        <SidebarLink text=\"Bookmarks\" Icon={BookmarkIcon} />\r\n        <SidebarLink text=\"Lists\" Icon={ClipboardListIcon} />\r\n        <SidebarLink text=\"Profile\" Icon={UserIcon} />\r\n        <SidebarLink text=\"More\" Icon={DotsCircleHorizontalIcon} />\r\n      </div>\r\n      <button className=\"hidden xl:inline ml-auto bg-[#1d9bf0] text-white rounded-full w-56 h-[52px] text-lg font-bold shadow-md hover:bg-[#1a8cd8]\">\r\n        Tweet\r\n      </button>\r\n      <div\r\n        className=\"text-[#d9d9d9] flex items-center justify-center mt-auto hoverAnimation xl:ml-auto xl:-mr-5\"\r\n        onClick={signOut}\r\n      >\r\n        <img\r\n          src={session.user.image}\r\n          alt=\"\"\r\n          className=\"h-10 w-10 rounded-full xl:mr-2.5\"\r\n        />\r\n        <div className=\"hidden xl:inline leading-5\">\r\n          <h4 className=\"font-bold\">{session.user.name}</h4>\r\n          <p className=\"text-[#6e767d]\">@{session.user.tag}</p>\r\n        </div>\r\n        <DotsHorizontalIcon className=\"h-5 hidden xl:inline ml-10\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\SidebarLink.js",[],[],"C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Trending.js",["106"],[],"import { DotsHorizontalIcon } from \"@heroicons/react/outline\";\r\nimport Image from \"next/image\";\r\n\r\nfunction Trending({ result }) {\r\n  return (\r\n    <div className=\"hover:bg-white hover:bg-opacity-[0.03] px-4 py-3 cursor-pointer transition duration-200 ease-out flex items-center justify-between\">\r\n      <div className=\"space-y-0.5\">\r\n        <p className=\"text-[#6e767d] text-xs font-medium\">{result.heading}</p>\r\n        <h6 className=\"font-bold max-w-[250px] text-sm\">\r\n          {result.discription}\r\n        </h6>\r\n        <p className=\"text-[#6e767d] text-xs font-medium max-w-[250px]\">\r\n          Trending with{\" \"}\r\n          {result.tags.map((tag, index) => (\r\n            <span key={index} className=\"tag\">\r\n              {tag}\r\n            </span>\r\n          ))}\r\n        </p>\r\n      </div>\r\n\r\n      {result.img ? (\r\n        <Image\r\n          src={result.img}\r\n          width={70}\r\n          height={70}\r\n          objectFit=\"cover\"\r\n          className=\"rounded-2xl\"\r\n        />\r\n      ) : (\r\n        <div className=\"icon group\">\r\n          <DotsHorizontalIcon className=\"h-5 text-[#6e767d] group-hover:text-[#1d9bf0]\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trending;\r\n","C:\\Users\\SW2160\\Desktop\\twitter-clone-yt\\components\\Widgets.js",["107"],[],"import { SearchIcon } from \"@heroicons/react/outline\";\r\nimport Trending from \"./Trending\";\r\nimport Image from \"next/image\";\r\n\r\nfunction Widgets({ trendingResults, followResults }) {\r\n  return (\r\n    <div className=\"hidden lg:inline ml-8 xl:w-[450px] py-1 space-y-5\">\r\n      <div className=\"sticky top-0 py-1.5 bg-black z-50 w-11/12 xl:w-9/12\">\r\n        <div className=\"flex items-center bg-[#202327] p-3 rounded-full relative\">\r\n          <SearchIcon className=\"text-gray-500 h-5 z-50\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"bg-transparent placeholder-gray-500 outline-none text-[#d9d9d9] absolute inset-0 pl-11 border border-transparent w-full focus:border-[#1d9bf0] rounded-full focus:bg-black focus:shadow-lg\"\r\n            placeholder=\"Search Twitter\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"text-[#d9d9d9] space-y-3 bg-[#15181c] pt-2 rounded-xl w-11/12 xl:w-9/12\">\r\n        <h4 className=\"font-bold text-xl px-4\">What's happening</h4>\r\n        {trendingResults.map((result, index) => (\r\n          <Trending key={index} result={result} />\r\n        ))}\r\n        <button className=\"hover:bg-white hover:bg-opacity-[0.03] px-4 py-3 cursor-pointer transition duration-200 ease-out flex items-center justify-between w-full text-[#1d9bf0] font-light\">\r\n          Show more\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"text-[#d9d9d9] space-y-3 bg-[#15181c] pt-2 rounded-xl w-11/12 xl:w-9/12\">\r\n        <h4 className=\"font-bold text-xl px-4\">Who to follow</h4>\r\n        {followResults.map((result, index) => (\r\n          <div\r\n            className=\"hover:bg-white hover:bg-opacity-[0.03] px-4 py-2 cursor-pointer transition duration-200 ease-out flex items-center\"\r\n            key={index}\r\n          >\r\n            <Image\r\n              src={result.userImg}\r\n              width={50}\r\n              height={50}\r\n              objectFit=\"cover\"\r\n              className=\"rounded-full\"\r\n            />\r\n            <div className=\"ml-4 leading-5 group\">\r\n              <h4 className=\"font-bold group-hover:underline\">\r\n                {result.username}\r\n              </h4>\r\n              <h5 className=\"text-gray-500 text-[15px]\">{result.tag}</h5>\r\n            </div>\r\n            <button className=\"ml-auto bg-white text-black rounded-full font-bold text-sm py-1.5 px-3.5\">\r\n              Follow\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button className=\"hover:bg-white hover:bg-opacity-[0.03] px-4 py-3 cursor-pointer transition duration-200 ease-out flex items-center justify-between w-full text-[#1d9bf0] font-light\">\r\n          Show more\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n",{"ruleId":"108","severity":1,"message":"109","line":36,"column":5,"nodeType":"110","endLine":36,"endColumn":9,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":48,"column":5,"nodeType":"110","endLine":48,"endColumn":13,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":13,"column":7,"nodeType":"116","endLine":17,"endColumn":9},{"ruleId":"108","severity":1,"message":"112","line":21,"column":5,"nodeType":"110","endLine":21,"endColumn":9,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":30,"column":6,"nodeType":"110","endLine":30,"endColumn":8,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"115","line":98,"column":7,"nodeType":"116","endLine":103,"endColumn":9},{"ruleId":"114","severity":1,"message":"115","line":122,"column":15,"nodeType":"116","endLine":126,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":7,"column":7,"nodeType":"116","endLine":12,"endColumn":9},{"ruleId":"108","severity":1,"message":"122","line":37,"column":5,"nodeType":"110","endLine":37,"endColumn":9,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"115","line":95,"column":21,"nodeType":"116","endLine":99,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":120,"column":21,"nodeType":"116","endLine":124,"endColumn":23},{"ruleId":"108","severity":1,"message":"112","line":49,"column":5,"nodeType":"110","endLine":49,"endColumn":13,"suggestions":"124"},{"ruleId":"108","severity":1,"message":"112","line":57,"column":5,"nodeType":"110","endLine":57,"endColumn":13,"suggestions":"125"},{"ruleId":"108","severity":1,"message":"126","line":65,"column":5,"nodeType":"110","endLine":65,"endColumn":12,"suggestions":"127"},{"ruleId":"114","severity":1,"message":"115","line":84,"column":9,"nodeType":"116","endLine":88,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":93,"column":13,"nodeType":"116","endLine":97,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":131,"column":9,"nodeType":"116","endLine":135,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":23,"column":9,"nodeType":"116","endLine":23,"endColumn":68},{"ruleId":"114","severity":1,"message":"115","line":42,"column":9,"nodeType":"116","endLine":46,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":23,"column":9,"nodeType":"116","endLine":29,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":36,"column":13,"nodeType":"116","endLine":42,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["128"],"React Hook useEffect has an unnecessary dependency: 'db'. Either exclude it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.",["129"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",["130"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["131"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.",["132"],["133"],["134"],"React Hook useEffect has a missing dependency: 'session?.user?.uid'. Either include it or remove the dependency array.",["135"],{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"136","fix":"145"},{"desc":"136","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [id]",{"range":"149","text":"150"},{"range":"151","text":"150"},"Update the dependencies array to be: []",{"range":"152","text":"153"},"Update the dependencies array to be: [props]",{"range":"154","text":"155"},"Update the dependencies array to be: [postId]",{"range":"156","text":"157"},{"range":"158","text":"150"},{"range":"159","text":"150"},"Update the dependencies array to be: [likes, session?.user?.uid]",{"range":"160","text":"161"},[1195,1199],"[id]",[1437,1445],[633,637],"[]",[737,739],"[props]",[1054,1058],"[postId]",[1315,1323],[1475,1483],[1623,1630],"[likes, session?.user?.uid]"]